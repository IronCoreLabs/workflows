# CI for Scala projects. This compiles, runs tests, checks formatting, and produces a coverage report.

name: Scala CI
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      test_command:
        description: sbt command used to test. Typically "test" (default) or "testAll".
        type: string
        required: false
        default: "test"
      coverage:
        description: Whether or not to run `coverage` and `coverageReport`.
        type: boolean
        required: false
        default: true
      additional_system_deps:
        description: A single string of additional dependencies to install on the ubuntu runner using `apt`, ex "libsodium-dev openssl".
        type: string
        required: false
        default: ""
      download_release_binary_repo:
        description: Repo to download an additional binary from (e.g. IronCoreLabs/ironoxide-swig-bindings)
        type: string
        required: false
        default: ""
      download_release_binary_name:
        description: Name for additional binary to download from `download_release_binary_repo` (e.g. libironoxide_java.so)
        type: string
        required: false
        default: ""
      docker_version:
        description: Install a specific Docker version. Useful as a workaround for a `docker-it-scala` bug with Docker v26.
        type: string
        required: false
        default: ""
      smelter_required:
        description: Whether or not sql-smelter is required for this repository's tests.
        type: boolean
        required: false
        default: false
      smelter_branch:
        description: Branch of smelter to check out. Should come from the sql-smelter workflow. Defaults to main.
        type: string
        required: false
        default: "main"

jobs:
  test:
    if: github.event_name != 'issue_comment'
    runs-on: ubuntu-24.04
    env:
      UNDER_TEST_FOLDER: scala-repo
    steps:
      - uses: actions/checkout@v5
        with:
          path: ${{ env.UNDER_TEST_FOLDER }}
      - uses: actions/checkout@v5
        if: ${{ inputs.smelter_required }}
        with:
          repository: IronCoreLabs/sql-smelter
          token: ${{ secrets.WORKFLOW_PAT }}
          ref: ${{ inputs.smelter_branch }}
          path: sql-smelter
      - name: Install refinery
        if: ${{ inputs.smelter_required }}
        uses: IronCoreLabs/rust-install@v0.1.2
        with:
          crate: refinery_cli
          accesskey: ${{ vars.TOOL_CACHE_ACCESS_KEY_ID }}
          secretkey: ${{ secrets.TOOL_CACHE_SECRET_KEY }}
          os: ubuntu-24.04
      - name: Install additional dependencies
        if: ${{ inputs.additional_system_deps != '' }}
        run: |
          sudo apt update
          sudo apt install ${{ inputs.additional_system_deps }}
      - name: Restore caches
        uses: coursier/cache-action@v6
      - name: Setup Scala
        uses: coursier/setup-action@v1
        with:
          jvm: adoptium:1.17
          apps: sbt
      - name: Download additional binary
        if: ${{ inputs.download_release_binary_repo != '' && inputs.download_release_binary_name != '' }}
        uses: robinraju/release-downloader@v1.12
        with:
          repository: ${{ inputs.download_release_binary_repo }}
          fileName: ${{ inputs.download_release_binary_name }}
          latest: true
      - name: Install specific Docker version
        if: inputs.docker_version != ''
        uses: docker/setup-docker-action@v4
        with:
          version: ${{ inputs.docker_version }}
      - name: Print docker version
        run: docker --version
      - name: Build and test
        working-directory: ${{ env.UNDER_TEST_FOLDER }}
        env:
          MAVEN_IRONCORELABS_COM_AWS_ACCESS_KEY_ID: ${{ vars.MAVEN_IRONCORELABS_COM_AWS_ACCESS_KEY_ID }}
          MAVEN_IRONCORELABS_COM_AWS_SECRET_KEY: ${{ secrets.MAVEN_IRONCORELABS_COM_AWS_SECRET_KEY }}
          LD_LIBRARY_PATH: "./" # If a release was downloaded, it would be here. If not, no harm done.
        # See https://github.com/IronCoreLabs/backup-kafka/issues/102, this -D should be removed once not needed
        run: sbt -Dhttps.protocols=TLSv1.2,TLSv1.1,TLSv1 scalafmtCheckAll scalastyle ${{ inputs.coverage && 'coverage' || '' }} ${{ inputs.test_command }} ${{ inputs.coverage && 'coverageReport' || '' }}
