# CI tasks for Node (TypeScript, JavaScript) repositories.

# Customization:
# - all customization should be available via inputs. If anything isn't available, try to add it to this as an input instead of copying and modifying directly
#
# TODO:
# - once https://github.com/orgs/community/discussions/25742 or https://github.com/orgs/community/discussions/18055 are implemented,
#   make use of the resulting feature to have a unit test project for this. For now it's too much pain to manage the
#   workspace root across the steps
name: TypeScript CI
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      smelter_required:
        description: Whether or not sql-smelter is required for this repository's tests.
        type: boolean
        required: false
        default: false
      smelter_branch:
        description: Branch of smelter to check out. Should come from the sql-smelter workflow. Defaults to main.
        type: string
        required: false
        default: "main"
      test_matrix_node_version:
        description: 'A JS array list of versions to be included in the test matrix. Defaults to "["14"]".'
        required: false
        default: '["14"]'
        type: string
      additional_system_deps:
        description: 'A single string of additional dependencies to install on the ubuntu runner using `apt`, ex "protobuf-compiler openssl".'
        type: string
        required: false
        default: ""
      files_to_decrypt:
        description: 'A single string of files to ironhide decrypt using organizational keys, ex ".env.iron .integration.iron".'
        type: string
        required: false
        default: ""
      node_options:
        description: 'A single string of command line flags to pass to any node commands, ex "--max-old-space-size=4096".'
        type: string
        required: false
        default: ""
      run_coverage:
        type: boolean
        default: true
        required: false
      additional_steps:
        type: string
        description: 'A JS array list of additional bash commands to run after the final step, ex "["./build.js", "yarn run compile"]".'
        required: false
        default: ""
    secrets:
      IRONHIDE_KEYS:
        description: "Keys to use when decrypting optional ironhide files."
        required: false
      WORKFLOW_PAT:
        description: "GitHub PAT to use when checking out an earlier version of the branch for coverage."
        required: true

jobs:
  test:
    runs-on: ubuntu-22.04
    env:
      NODE_OPTIONS: ${{ inputs.node_options }}
      UNDER_TEST_FOLDER: typescript-repo
    strategy:
      matrix:
        node_version: "${{ fromJSON(inputs.test_matrix_node_version) }}"
    defaults:
      run:
        working-directory: ${{ env.UNDER_TEST_FOLDER }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.UNDER_TEST_FOLDER }}
      - uses: actions/checkout@v4
        if: ${{ inputs.smelter_required }}
        with:
          repository: IronCoreLabs/sql-smelter
          token: ${{ secrets.WORKFLOW_PAT }}
          ref: ${{ inputs.smelter_branch }}
          path: sql-smelter
      - name: Install refinery
        if: ${{ inputs.smelter_required }}
        uses: IronCoreLabs/rust-install@v0.1.2
        with:
          crate: refinery_cli
          accesskey: ${{ vars.TOOL_CACHE_ACCESS_KEY_ID }}
          secretkey: ${{ secrets.TOOL_CACHE_SECRET_KEY }}
          os: ubuntu-22.04
      - name: Decrypt ironhide files
        uses: IronCoreLabs/ironhide-actions/decrypt@v3
        if: ${{ inputs.files_to_decrypt != '' }}
        with:
          keys: ${{ secrets.IRONHIDE_KEYS }}
          input: ${{ inputs.files_to_decrypt }}
          working-directory: ${{ env.UNDER_TEST_FOLDER }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: yarn
          cache-dependency-path: ${{ env.UNDER_TEST_FOLDER }}/yarn.lock
      - name: Install additional dependencies
        if: ${{ inputs.additional_system_deps != '' }}
        run: |
          sudo apt update
          sudo apt install ${{ inputs.additional_system_deps }}
      - name: Install modules
        run: yarn
      - name: Run tests
        run: yarn run test
      - name: Check test coverage
        if: ${{ inputs.run_coverage && github.base_ref != '' }}
        uses: anuraag016/Jest-Coverage-Diff@V1.4
        with:
          fullCoverageDiff: false
          delta: 0.2
          afterSwitchCommand: "cd ..; yarn"
          accessToken: ${{ secrets.WORKFLOW_PAT }}
          runCommand: cd "${{env.UNDER_TEST_FOLDER }}"; npx jest --coverage --coverageReporters="json-summary" --coverageDirectory="${{env.UNDER_TEST_FOLDER }}"
      - name: Additional commands
        if: ${{ inputs.additional_steps != '' }}
        shell: bash
        run: ${{ join(inputs.additional_steps, '; ') }}
